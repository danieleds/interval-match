0 info it worked if it ends with ok
1 verbose cli [ '/home/daniele/opt/node-v6.3.1-linux-x64/bin/node',
1 verbose cli   '/home/daniele/opt/node-v6.3.1-linux-x64/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.10.7
3 info using node@v6.3.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/home/daniele/Progetti/js/interval-match',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/daniele/.npm/interval-match/0.1.3/package.tgz not in flight; packing
9 verbose correctMkdir /home/daniele/.npm correctMkdir not in flight; initializing
10 info lifecycle interval-match@0.1.3~prepublish: interval-match@0.1.3
11 silly lifecycle interval-match@0.1.3~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/home/daniele/.npm/interval-match/0.1.3/package.tgz',
12 verbose tar pack   '/home/daniele/Progetti/js/interval-match' ]
13 verbose tarball /home/daniele/.npm/interval-match/0.1.3/package.tgz
14 verbose folder /home/daniele/Progetti/js/interval-match
15 verbose addLocalTarball adding from inside cache /home/daniele/.npm/interval-match/0.1.3/package.tgz
16 verbose correctMkdir /home/daniele/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd interval-match@0.1.3
18 verbose afterAdd /home/daniele/.npm/interval-match/0.1.3/package/package.json not in flight; writing
19 verbose correctMkdir /home/daniele/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /home/daniele/.npm/interval-match/0.1.3/package/package.json written
21 silly publish { name: 'interval-match',
21 silly publish   version: '0.1.3',
21 silly publish   description: '[![npm version](https://badge.fury.io/js/interval-match.svg)](https://badge.fury.io/js/interval-match)',
21 silly publish   main: 'lib/src/index.js',
21 silly publish   typings: 'lib/src/index',
21 silly publish   scripts: { build: 'tsc', test: 'mocha -R spec lib/test/*.test.js' },
21 silly publish   author: '',
21 silly publish   license: 'MIT',
21 silly publish   devDependencies: { assert6: '^1.0.1', mocha: '^3.0.2', typescript: '^2.0.2' },
21 silly publish   files: [ 'lib/src' ],
21 silly publish   readme: '# IntervalMatch\n\n[![npm version](https://badge.fury.io/js/interval-match.svg)](https://badge.fury.io/js/interval-match)\n\nThis library allows you to match a set of intervals with various patterns.\n\n## Install\n\n```sh\n$ npm install --save interval-match\n```\n\n## Introduction\n\nIntervals are objects which define their position and a payload. For example, this is an interval:\n\n```js\n{\n    from: 10,\n    to: 15.7,\n    data: { some: \'thing\' }\n}\n```\n\nWhen you have a set of intervals, you might need to find some of them based on their properties as a whole.\nThink of this process as similar to regular expressions: just like `a{1,3}b` will match any string composed by one, two or three *a\'s* followed by a *b*, you can write a pattern that can match an interval with a length of 20 which is followed by another interval which ends before 50.\n\n## Usage\n\nFirst, import the module:\n\n```js\nconst IntervalMatch = require(\'interval-match\').IntervalMatch  // CommonJS / Node style\n// or:\nimport { IntervalMatch } from \'interval-match\'  // ES6 style\n```\nThen you can call the `match` function over some intervals to know if they match a specific pattern.\n\nExample:\n\n```js\nimport { IntervalMatch } from \'interval-match\'\n\n// Here we define the pattern we want to match.\n// In this case, we\'re saying we want to match the intervals which:\n//  - start between 35 and 45\n//  - have a length of 5 or more\n//  - are followed by a space (the gap before the next interval) which:\n//     - is half the size of them\n//  - and then by an interval which:\n//     - is smaller or equal to 30\nconst pattern = [\n    {\n        interval: {\n            name: \'A\',\n            from: { lowerBound: 35, upperBound: 45 },\n            to: null,\n            minSize: 5,\n            maxSize: Infinity\n        },\n        followingSpace: {\n            name: \'B\',\n            minSize: \'A * 0.5\',\n            maxSize: \'A * 0.5\'\n        }\n    },\n    {\n        interval: {\n            name: \'C\',\n            from: null,\n            to: null,\n            minSize: 0,\n            maxSize: 30\n        },\n        followingSpace: null\n    }\n]\n\n// Our intervals\nconst intervals = [\n    { from: 20, to: 30, data: \'apple\' },\n    { from: 40, to: 60, data: \'orange\' },\n    { from: 70, to: 100, data: \'lemon\' }\n];\n\n// Get the matches\nconst matches = IntervalMatch.match(pattern, intervals);\n\n// Now `matches` will be:\n//     Map {\n//       \'A\' => { from: 40, to: 60, data: \'orange\' },\n//       \'B\' => { from: 60, to: 70, data: undefined },\n//       \'C\' => { from: 70, to: 100, data: \'lemon\' } }\n```\n\n## Patterns\n\nAs we saw in the example, a pattern is actually an array of rules, each of which is limited to a single interval. So, a sequence of rules describes how the succession of the intervals should look like.\n\nThere are two types of rules: *IntervalRule* and *SpaceRule*. The first is applied to intervals, the second to the gaps between intervals.\n\n### IntervalRule\n\n```js\n{\n    name: \'A\',\n    from: { lowerBound: 35, upperBound: 45 },\n    to: null,\n    minSize: 5,\n    maxSize: Infinity\n}\n```\n\n* **name:** string\n\n   The name to assign to the matched interval to identify it in the result. If it is in the form of an identifier (only letters, numbers and underscores, and doesn\'t start with a number) then it can be used in expressions (see below).\n   \n* **from:** Endpoint | null\n\n   If not null, defines where the interval should start. It takes an Endpoint, which is an object like the following, that you can use to specify the allowed range for the start of the interval:\n   \n   ```js\n   { lowerBound: number, upperBound: number }\n   ```\n\n* **to:** Endpoint | null\n\n   If not null, defines where the interval should end. See **from**.\n\n* **minSize:** number | string\n\n   Defines the minimum size of the interval. If it is a string, the value is interpreted as an arithmetic expression which:\n     * can use `+`, `-` and `*` operators (no division)\n     * can use any preceding matched name as a variable (e.g: `1.5 * (A + B) - 1`)\n\n* **maxSize:** number | string\n\n   Defines the maximum size of the interval. See **minSize**.\n<!--\n## Current Limitations\nno overlapping intervals\nprecedingSpace-->\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '83813ba58e2019a60f4ec22138eb674a1dfeb8f9',
21 silly publish   _id: 'interval-match@0.1.3',
21 silly publish   _shasum: '4b5052363ac1372b819d23e378053107e3f158bd',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name interval-match
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'interval-match',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'interval-match',
26 silly mapToRegistry   name: 'interval-match',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/interval-match
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /home/daniele/.npm/interval-match/0.1.3/package.tgz
30 verbose request uri https://registry.npmjs.org/interval-match
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 11:32:35
33 verbose request using bearer token for auth
34 verbose request id 33f40a851e136997
35 http request PUT https://registry.npmjs.org/interval-match
36 http 403 https://registry.npmjs.org/interval-match
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sat, 10 Sep 2016 09:32:37 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-lcy1123-LCY',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1473499956.313811,VS0,VE973',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /home/daniele/.npm/registry.npmjs.org/interval-match on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 0.1.3." : interval-match
40 verbose stack     at makeError (/home/daniele/opt/node-v6.3.1-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/home/daniele/opt/node-v6.3.1-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/home/daniele/opt/node-v6.3.1-linux-x64/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/home/daniele/opt/node-v6.3.1-linux-x64/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/home/daniele/opt/node-v6.3.1-linux-x64/lib/node_modules/npm/node_modules/request/request.js:1044:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/home/daniele/opt/node-v6.3.1-linux-x64/lib/node_modules/npm/node_modules/request/request.js:965:12)
41 verbose statusCode 403
42 verbose pkgid interval-match
43 verbose cwd /home/daniele/Progetti/js/interval-match
44 error Linux 4.4.0-36-generic
45 error argv "/home/daniele/opt/node-v6.3.1-linux-x64/bin/node" "/home/daniele/opt/node-v6.3.1-linux-x64/bin/npm" "publish"
46 error node v6.3.1
47 error npm  v3.10.7
48 error code E403
49 error "You cannot publish over the previously published version 0.1.3." : interval-match
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
